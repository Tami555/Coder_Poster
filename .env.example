# Безопасность
SECRET_KEY='замените-на-уникальный-секретный-ключ'  # Сгенерируйте уникальный ключ для Django
DEBUG=True  # В продакшене установите False

# Настройки базы данных PostgreSQL
DB_NAME='ваша_база_данных'  # Название вашей БД
DB_USER='ваш_пользователь_бд'  # Логин для подключения к БД
DB_PASSWORD='ваш_надежный_пароль'  # Пароль для доступа к БД
DB_HOST=postgresql  # сервис БД из Docker (менять не нужно)
DB_PORT=5432  # Стандартный порт PostgreSQL
# если не хотите париться можете использовать sqlite по умолчанию. 
#Для этого зайдите в settings.py, найдите переменную DATABASES , закомментируйте postgresql и раскомментируйте sqlite

# Redis
REDIS_HOST=redis # сервис Redis из Docker (менять не нужно)
REDIS_PORT=6379
# RabbitMQ
RABBITMQ_HOST = rabbit # сервис Rabbit из Docker (менять не нужно)
RABBITMQ_PORT = 5672

# Настройки аутентификации через GitHub
# Инструкции: https://python-social-auth.readthedocs.io/en/latest/backends/github.html
GITHUB_AUTH_KEY='ваш_client_id_github'  # Client ID из настроек GitHub OAuth App
GITHUB_AUTH_SECRET='ваш_client_secret_github'  # Client Secret из настроек GitHub OAuth App

# Настройки аутентификации через Google
# Инструкции: https://python-social-auth.readthedocs.io/en/latest/backends/google.html
AUTH_GOOGLE_KEY = 'ваш_client_id_google'
AUTH_GOOGLE_SECRET = 'ваш_client_secret_google'

# Настройки почтового сервера
EMAIL_HOST_USER='ваш_email@example.com'  # Email для отправки писем
EMAIL_HOST_PASSWORD='пароль_от_почтового_сервера'  # Пароль для почтового сервера

# Отправка email
DEFAULT_FROM_EMAIL='ваш_email@example.com'  # Email, который будет указан как отправитель
SERVER_EMAIL='ваш_email@example.com'  # Email для системных уведомлений